// qwebenginedownloaditem.sip generated by MetaSIP
//
// This file is part of the QtWebEngineWidgets Python extension module.
//
// Copyright (c) 2017 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt5.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_5_5_0 -)

class QWebEngineDownloadItem : QObject
{
%TypeHeaderCode
#include <qwebenginedownloaditem.h>
%End

public:
    virtual ~QWebEngineDownloadItem();

    enum DownloadState
    {
        DownloadRequested,
        DownloadInProgress,
        DownloadCompleted,
        DownloadCancelled,
        DownloadInterrupted,
    };

    quint32 id() const;
    QWebEngineDownloadItem::DownloadState state() const;
    qint64 totalBytes() const;
    qint64 receivedBytes() const;
    QUrl url() const;
    QString path() const;
    void setPath(QString path);
    bool isFinished() const;

public slots:
    void accept();
    void cancel();

signals:
    void finished();
    void stateChanged(QWebEngineDownloadItem::DownloadState state);
    void downloadProgress(qint64 bytesReceived, qint64 bytesTotal);

public:
%If (Qt_5_6_0 -)
    QString mimeType() const;
%End
%If (Qt_5_7_0 -)

    enum SavePageFormat
    {
        UnknownSaveFormat,
        SingleHtmlSaveFormat,
        CompleteHtmlSaveFormat,
        MimeHtmlSaveFormat,
    };

%End
%If (Qt_5_7_0 -)
    QWebEngineDownloadItem::SavePageFormat savePageFormat() const;
%End
%If (Qt_5_7_0 -)
    void setSavePageFormat(QWebEngineDownloadItem::SavePageFormat format);
%End
%If (Qt_5_8_0 -)

    enum DownloadType
    {
        Attachment,
        DownloadAttribute,
        UserRequested,
        SavePage,
    };

%End
%If (Qt_5_8_0 -)
    QWebEngineDownloadItem::DownloadType type() const;
%End
%If (Qt_5_9_0 -)

    enum DownloadInterruptReason
    {
        NoReason,
        FileFailed,
        FileAccessDenied,
        FileNoSpace,
        FileNameTooLong,
        FileTooLarge,
        FileVirusInfected,
        FileTransientError,
        FileBlocked,
        FileSecurityCheckFailed,
        FileTooShort,
        FileHashMismatch,
        NetworkFailed,
        NetworkTimeout,
        NetworkDisconnected,
        NetworkServerDown,
        NetworkInvalidRequest,
        ServerFailed,
        ServerBadContent,
        ServerUnauthorized,
        ServerCertProblem,
        ServerForbidden,
        ServerUnreachable,
        UserCanceled,
    };

%End
%If (Qt_5_9_0 -)
    QWebEngineDownloadItem::DownloadInterruptReason interruptReason() const;
%End
%If (Qt_5_9_0 -)
    QString interruptReasonString() const;
%End

private:
    QWebEngineDownloadItem(const QWebEngineDownloadItem &);
};

%End
